#pragma once

#include "stdafx.h"

namespace FST
{
	struct RELATION // Ребро:символ -> вершина графа переходов КА
	{
		char symbol; // Символ перехода
		short nnode; // Номер смежной вершины
		RELATION(char c = 0x00, short ns = NULL); // Символ перехода и новое состояние
	};

	struct NODE  // Вершина графа переходов
	{
		short n_relation; // Количество инцедентных ребер
		RELATION* relations; // Инцедентные ребра
		NODE(); // Конструктор по умолчанию
		NODE(short n, RELATION rel, ...); // Количество инцедентных ребер и список ребер
	};

	struct FST // Недетерминированный конечный автомат
	{
		char* string; // Цепочка (строка, завершается 0x00)
		short position; // Текущая позиция в цепочке
		short nstates; // Количество состояний автомата
		NODE* nodes; // Граф переходов: [0] - начальное состояние, [nstate - 1] - конечное состояние
		short* rstates; // Возможные состояние автомата на данной позиции
		FST(char* s, short ns, NODE n, ...); // Цепочка (строка, завершается 0x00), количество состояний автомата, список состояний (граф переходов)
	};

	bool execute(FST& fst); // Выполнить распознавание цепочки (недетерминированный конечный автомат)
};