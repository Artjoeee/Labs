Microsoft (R) Macro Assembler Version 14.41.34123.0	    12/20/24 20:25:08
asm03.asm						     Page 1 - 1


				.586
				.model flat,stdcall
				includelib kernel32.lib

				ExitProcess PROTO : DWORD
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD

				.stack 4096
 00000000			.const
 00000000			.data
 00000000 10 20 30 40		myBytes BYTE 10h, 20h, 30h, 40h
 00000004 008A 003B 0044	myWords WORD 8Ah, 3Bh, 44h, 5Fh, 99h 
	   005F 0099
 0000000E 00000001		myDoubles DWORD 1, 2, 3, 4, 5, 6
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
 00000026 0000000E R		myPointer DWORD myDoubles
 0000002A 05 09 06 04 01	Arr BYTE 5, 9, 6, 4, 1, 7, 3
	   07 03
 = 00000000			MB_OK	EQU 0  

 00000031 C6 E0 EC EE E9	STR1	DB "Жамойдо Артём Игоревич", 0 
	   E4 EE 20 C0 F0
	   F2 B8 EC 20 C8
	   E3 EE F0 E5 E2
	   E8 F7 00
 00000048 CC E0 F1 F1 E8	STR2	DB "Массив содержит нулевой элемент", 0 
	   E2 20 F1 EE E4
	   E5 F0 E6 E8 F2
	   20 ED F3 EB E5
	   E2 EE E9 20 FD
	   EB E5 EC E5 ED
	   F2 00
 00000068 CC E0 F1 F1 E8	STR3	DB "Массив не содержит нулевой элемент", 0 
	   E2 20 ED E5 20
	   F1 EE E4 E5 F0
	   E6 E8 F2 20 ED
	   F3 EB E5 E2 EE
	   E9 20 FD EB E5
	   EC E5 ED F2 00
 0000008B 00000000		HW		DD ?  

 00000000			.code

 00000000			main PROC
 00000000			START:
 00000000  BF 00000002			mov EDI, 2
 00000005  66| 8B 87			mov AX, [myWords + EDI]
	   00000004 R
 0000000C  66| 8B 1D			mov BX, myWords[0]
	   00000004 R

 00000013  33 C0			xor EAX, EAX  ; Обнуление регистра EAX.
 00000015  33 DB			xor EBX, EBX  ; Обнуление регистра EBX.

 00000017  02 05 0000002A R		add AL, [Arr]    
 0000001D  02 05 0000002B R		add AL, [Arr + 1]
 00000023  02 05 0000002C R		add AL, [Arr + 2]
 00000029  02 05 0000002D R		add AL, [Arr + 3]
 0000002F  02 05 0000002E R		add AL, [Arr + 4]
 00000035  02 05 0000002F R		add AL, [Arr + 5]
 0000003B  02 05 00000030 R		add AL, [Arr + 6]

 00000041  33 C0			xor EAX, EAX  ; Обнуление регистра EAX.
 00000043  B9 00000007			mov ECX, LENGTHOF Arr  ; Загрузка длины массива байтов в регистр ECX.
 00000048  BB 00000001			mov EBX, 1  ; Установка значения EBX в 1.

 0000004D			CYCLE:
 0000004D  80 B8 0000002A R		cmp [Arr + EAX], 0  ; Сравнение значения элемента массива байтов с 0.
	   00
 00000054  74 02			je TRUE  ; Если равно 0, переход к метке TRUE.
 00000056  75 1E			jne FALSE  ; Если не равно 0, переход к метке FALSE.

 00000058			TRUE:
 00000058  BB 00000000			mov EBX, 0  ; Установка значения EBX в 0.
					invoke MessageBoxA, HW, OFFSET STR2, OFFSET STR1, MB_OK 
 00000074  EB 05			jmp ENDOFCYCLE  ; Переход к метке ENDOFCYCLE.

 00000076			FALSE:
 00000076  83 C0 01			add EAX, 1  ; Увеличение значения регистра EAX на 1.
 00000079  E2 D2			loop CYCLE  ; Повторение цикла, пока значение регистра ECX не станет равным 0.

 0000007B			ENDOFCYCLE:

 0000007B  83 FB 01			cmp EBX, 1  ; Сравнение значения EBX с 1.
 0000007E  74 02			je CHECKF  ; Если равно 1, переход к метке CHECKF.
 00000080  75 17			jne CHECKT  ; Если не равно 1, переход к метке CHECKT.

 00000082			CHECKF:
					invoke MessageBoxA, HW, OFFSET STR3, OFFSET STR1, MB_OK  

 00000099			CHECKT:

 00000099  6A 00			push 0  
 0000009B  E8 00000000 E		CALL ExitProcess 

 000000A0			main ENDP 
				end main
Microsoft (R) Macro Assembler Version 14.41.34123.0	    12/20/24 20:25:08
asm03.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000008F Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000A0 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000A0 Public STDCALL
  START  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  CYCLE  . . . . . . . . . . . .	L Near	 0000004D _TEXT	
  TRUE . . . . . . . . . . . . .	L Near	 00000058 _TEXT	
  FALSE  . . . . . . . . . . . .	L Near	 00000076 _TEXT	
  ENDOFCYCLE . . . . . . . . . .	L Near	 0000007B _TEXT	
  CHECKF . . . . . . . . . . . .	L Near	 00000082 _TEXT	
  CHECKT . . . . . . . . . . . .	L Near	 00000099 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Arr  . . . . . . . . . . . . . .	Byte	 0000002A _DATA	
HW . . . . . . . . . . . . . . .	DWord	 0000008B _DATA	
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
STR1 . . . . . . . . . . . . . .	Byte	 00000031 _DATA	
STR2 . . . . . . . . . . . . . .	Byte	 00000048 _DATA	
STR3 . . . . . . . . . . . . . .	Byte	 00000068 _DATA	
myBytes  . . . . . . . . . . . .	Byte	 00000000 _DATA	
myDoubles  . . . . . . . . . . .	DWord	 0000000E _DATA	
myPointer  . . . . . . . . . . .	DWord	 00000026 _DATA	
myWords  . . . . . . . . . . . .	Word	 00000004 _DATA	

	   0 Warnings
	   0 Errors
