<Window x:Class="Sportics.View.MembershipsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:svg="http://sharpvectors.codeplex.com/svgc/"
        xmlns:vm="clr-namespace:Sportics.ViewModel"
        xmlns:helper="clr-namespace:Sportics.Helper"
        xmlns:controls="clr-namespace:Sportics.View"
        mc:Ignorable="d"
        Title="Sportics"
        MinHeight="500" MinWidth="850"
        Width="1250" Height="650"
        WindowState="Maximized"
        WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <vm:MembershipsViewModel />
    </Window.DataContext>

    <Window.Resources>
        <helper:ImageSourceConverter x:Key="ImageConverter"/>
        
        <!-- Статический ресурс -->
        <SolidColorBrush x:Key="StaticAccentColor" Color="LimeGreen"/>

        <!-- Динамический ресурс -->
        <SolidColorBrush x:Key="DynamicAccentColor" Color="Blue"/>

        <!-- Стиль для кнопки -->
        <Style x:Key="StyledButton" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{DynamicResource DynamicAccentColor}"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!-- Стиль для TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderBrush" Value="{StaticResource StaticAccentColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <Style TargetType="ComboBox" x:Key="RoundedComboBoxStyle">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="LimeGreen"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8">
                                <DockPanel>
                                    <!-- Стандартная кнопка раскрытия -->
                                    <ToggleButton
                                DockPanel.Dock="Right"
                                Focusable="False"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"
                                Background="Transparent"
                                BorderThickness="0"
                                Margin="0"
                                Width="20">
                                        <Path
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 0 0 L 4 4 L 8 0 Z"
                                    Fill="Gray"
                                    Width="8" Height="4"/>
                                    </ToggleButton>

                                    <!-- Контент -->
                                    <ContentPresenter
                                Margin="6,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                RecognizesAccessKey="True"/>
                                </DockPanel>
                            </Border>

                            <!-- Выпадающий список -->
                            <Popup
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True"
                        Focusable="False"
                        PopupAnimation="Slide">
                                <Border
                            Background="White"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Верхняя панель -->
            <RowDefinition Height="*"/>
            <!-- Контент -->
            <RowDefinition Height="Auto"/>
            <!-- Нижняя панель -->
        </Grid.RowDefinitions>

        <!-- Верхняя панель -->
        <Grid Grid.Row="0" Background="{DynamicResource MaterialDesignPaper}" Height="60">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <!-- Лево: логотип -->
                <ColumnDefinition Width="Auto" />
                <!-- Центр: кнопки -->
                <ColumnDefinition Width="*" />
                <!-- Право: иконки -->
            </Grid.ColumnDefinitions>

            <!-- Левая часть: логотип и название -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="40,0" Grid.Column="0">
                <svg:SvgViewbox Source="/Resources/Images/dumbbell.svg" Height="40" Width="40" />
                <Label Content="SPORTICS" FontSize="24" VerticalAlignment="Center" Margin="10,0"/>
            </StackPanel>

            <!-- Центральная часть: кнопки -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1">
                <Button Content="{DynamicResource Tables}" FontSize="16" Margin="10,0" Width="150" Command="{Binding OpenAdminCommand}"/>
                <Button Content="{DynamicResource Add}" FontSize="16" Margin="10,0" Width="150" Command="{Binding OpenAddMembershipCommand}"/>
            </StackPanel>

            <!-- Правая часть: иконки -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" Grid.Column="2">
                <ToggleButton Content="🌙"
                    IsChecked="{Binding IsDarkTheme, Mode=TwoWay}"
                    ToolTip="Тема"
                    Width="40" Height="40"
                    VerticalAlignment="Center"
                    Margin="10,0,10,0"/>

                <ComboBox ItemsSource="{Binding Languages}"
                        SelectedItem="{Binding SelectedLanguage}" Width="50" Foreground="{DynamicResource MaterialDesignBody}"/>

                <Border Background="{DynamicResource MaterialDesignPaper}" Margin="10">
                    <Border.InputBindings>
                        <MouseBinding Gesture="LeftClick" Command="{Binding OpenAccountCommand}" />
                    </Border.InputBindings>
                    <svg:SvgViewbox Source="Resources\Images\user.svg" Height="30" Width="30"/>
                </Border>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <!-- Боковая панель -->
                <ColumnDefinition Width="*"/>
                <!-- Список абонементов -->
            </Grid.ColumnDefinitions>

            <!-- Боковая панель фильтрации -->
            <Border Grid.Column="0" Background="{DynamicResource MaterialDesignPaper}" Padding="15" Margin="0,0.1">
                <StackPanel Grid.Column="0" Background="{DynamicResource MaterialDesignPaper}" >
                    <TextBlock Text="{DynamicResource Filter}" FontSize="18" FontWeight="Bold" 
                               Foreground="{DynamicResource MaterialDesignBody}"
                               Margin="0,0,0,10"/>

                    <TextBlock Text="{DynamicResource Category}" Foreground="{DynamicResource MaterialDesignBody}"
                               Margin="0,10,0,5"/>
                    <ComboBox ItemsSource="{Binding Categories}" 
                                SelectedItem="{Binding SelectedCategory}"
                                Style="{StaticResource RoundedComboBoxStyle}"/>

                    <TextBlock Text="{DynamicResource PriceFrom}" Foreground="{DynamicResource MaterialDesignBody}" Margin="0,10,0,5"/>
                    <TextBox Text="{Binding PriceFrom, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                            Margin="0,0,0,10"/>

                    <TextBlock Text="{DynamicResource PriceTo}" Foreground="{DynamicResource MaterialDesignBody}" Margin="0,10,0,5"/>
                    <TextBox Text="{Binding PriceTo, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                            Margin="0,0,0,10"/>

                    <Button Content="{DynamicResource ApplyFilter}"
                            Command="{Binding ApplyFilterCommand}"
                            HorizontalAlignment="Stretch">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="{DynamicResource DynamicAccentColor}"/>
                                <Setter Property="Padding" Value="10"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Margin" Value="5"/>

                                <Style.Triggers>
                                    <!-- DataTrigger: если PriceFrom пустое -->
                                    <DataTrigger Binding="{Binding PriceFrom}" Value="">
                                        <Setter Property="Background" Value="Gray"/>
                                        <Setter Property="ToolTip" Value="Введите цену 'От'"/>
                                    </DataTrigger>

                                    <!-- DataTrigger: если PriceTo пустое -->
                                    <DataTrigger Binding="{Binding PriceTo}" Value="">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="ToolTip" Value="Введите цену 'До'"/>
                                    </DataTrigger>

                                    <!-- MultiDataTrigger: оба поля пусты -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding PriceFrom}" Value=""/>
                                            <Condition Binding="{Binding PriceTo}" Value=""/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="ToolTip" Value="Введите оба значения цены"/>
                                        <Setter Property="Background" Value="Red"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                    To="OrangeRed" Duration="0:0:0.8" AutoReverse="True"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>

                    <Button Content="Undo" Command="{Binding UndoCommand}" IsEnabled="{Binding Source={x:Static vm:UndoRedoManager.Instance}, Path=CanUndo}" Margin="10"/>
                    <Button Content="Redo" Command="{Binding RedoCommand}" IsEnabled="{Binding Source={x:Static vm:UndoRedoManager.Instance}, Path=CanRedo}" Margin="10"/>

                </StackPanel>
            </Border>
            

            <!-- Список абонементов -->
            <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <ItemsControl ItemsSource="{Binding FilteredMemberships}" Background="{DynamicResource MaterialDesignBackground}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <controls:MembershipCard 
                                    Membership="{Binding}"
                                    DeleteCommand="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    
                </ItemsControl>
                
            </ScrollViewer>
        </Grid>

        <!-- Нижняя панель -->
        <Border Grid.Row="2" Background="{DynamicResource MaterialDesignPaper}" Padding="10">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,15,0">
                <svg:SvgViewbox Source="Resources\Images\Mail.svg" Height="20" Width="20" Margin="0,0,5,0"/>
                <Label Content="sportics@gmail.com" VerticalAlignment="Center"/>
                <svg:SvgViewbox Source="Resources\Images\Phone.svg" Height="20" Width="20" Margin="20,0,5,0"/>
                <Label Content="+375 (44) 573-04-02" VerticalAlignment="Center"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
