; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33522.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__AE52136B_Lab_01@pch DB 01H
__942A71C6_dateOfYear@cpp DB 01H
__6DC09320_stdafx@h DB 01H
__8FED6CB7_stdafx@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?dateOfYear@@YAHHH@Z				; dateOfYear
PUBLIC	__JustMyCode_Default
EXTRN	?getYear@@YA_NH@Z:PROC				; getYear
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dateOfYear@@YAHHH@Z DD imagerel $LN6
	DD	imagerel $LN6+292
	DD	imagerel $unwind$?dateOfYear@@YAHHH@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dateOfYear@@YAHHH@Z DD 025052e01H
	DD	01112316H
	DD	0700a002fH
	DD	05009H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?dateOfYear@@YAHHH@Z$rtcName$0 DB 064H			; dateOfYear
	DB	061H
	DB	079H
	DB	04dH
	DB	06fH
	DB	06eH
	DB	074H
	DB	068H
	DB	00H
	ORG $+7
?dateOfYear@@YAHHH@Z$rtcVarDesc DD 068H			; dateOfYear
	DD	034H
	DQ	FLAT:?dateOfYear@@YAHHH@Z$rtcName$0
	ORG $+48
?dateOfYear@@YAHHH@Z$rtcFrameData DD 01H		; dateOfYear
	DD	00H
	DQ	FLAT:?dateOfYear@@YAHHH@Z$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\HomeUser\Desktop\ œŒ\Lab_01\Lab_01\dateOfYear.cpp
;	COMDAT ?dateOfYear@@YAHHH@Z
_TEXT	SEGMENT
currentDay$ = 4
month$ = 36
dayMonth$ = 72
dayOfYear$ = 368
year$ = 376
?dateOfYear@@YAHHH@Z PROC				; dateOfYear, COMDAT

; 4    : {

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	55		 push	 rbp
  00009	57		 push	 rdi
  0000a	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	48 8d 7c 24 20	 lea	 rdi, QWORD PTR [rsp+32]
  0001b	b9 26 00 00 00	 mov	 ecx, 38			; 00000026H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	8b 8c 24 98 01
	00 00		 mov	 ecx, DWORD PTR [rsp+408]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__942A71C6_dateOfYear@cpp
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 5    :     int currentDay = 0;

  0003a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR currentDay$[rbp], 0

; 6    :     int month = 1;

  00041	c7 45 24 01 00
	00 00		 mov	 DWORD PTR month$[rbp], 1

; 7    :     int dayMonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

  00048	c7 45 48 00 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp], 0
  0004f	c7 45 4c 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+4], 31
  00056	c7 45 50 1c 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+8], 28
  0005d	c7 45 54 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+12], 31
  00064	c7 45 58 1e 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+16], 30
  0006b	c7 45 5c 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+20], 31
  00072	c7 45 60 1e 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+24], 30
  00079	c7 45 64 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+28], 31
  00080	c7 45 68 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+32], 31
  00087	c7 45 6c 1e 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+36], 30
  0008e	c7 45 70 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+40], 31
  00095	c7 45 74 1e 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+44], 30
  0009c	c7 45 78 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+48], 31

; 8    : 
; 9    :     if (getYear(year))

  000a3	8b 8d 78 01 00
	00		 mov	 ecx, DWORD PTR year$[rbp]
  000a9	e8 00 00 00 00	 call	 ?getYear@@YA_NH@Z	; getYear
  000ae	0f b6 c0	 movzx	 eax, al
  000b1	85 c0		 test	 eax, eax
  000b3	74 11		 je	 SHORT $LN4@dateOfYear

; 10   :     {
; 11   :         dayMonth[2] = 29;

  000b5	b8 04 00 00 00	 mov	 eax, 4
  000ba	48 6b c0 02	 imul	 rax, rax, 2
  000be	c7 44 05 48 1d
	00 00 00	 mov	 DWORD PTR dayMonth$[rbp+rax], 29
$LN4@dateOfYear:
$LN2@dateOfYear:

; 12   :     }
; 13   : 
; 14   :     while (currentDay + dayMonth[month] < dayOfYear)

  000c6	48 63 45 24	 movsxd	 rax, DWORD PTR month$[rbp]
  000ca	8b 44 85 48	 mov	 eax, DWORD PTR dayMonth$[rbp+rax*4]
  000ce	8b 4d 04	 mov	 ecx, DWORD PTR currentDay$[rbp]
  000d1	03 c8		 add	 ecx, eax
  000d3	8b c1		 mov	 eax, ecx
  000d5	3b 85 70 01 00
	00		 cmp	 eax, DWORD PTR dayOfYear$[rbp]
  000db	7d 1c		 jge	 SHORT $LN3@dateOfYear

; 15   :     {
; 16   :         currentDay += dayMonth[month];

  000dd	48 63 45 24	 movsxd	 rax, DWORD PTR month$[rbp]
  000e1	8b 44 85 48	 mov	 eax, DWORD PTR dayMonth$[rbp+rax*4]
  000e5	8b 4d 04	 mov	 ecx, DWORD PTR currentDay$[rbp]
  000e8	03 c8		 add	 ecx, eax
  000ea	8b c1		 mov	 eax, ecx
  000ec	89 45 04	 mov	 DWORD PTR currentDay$[rbp], eax

; 17   :         month++;

  000ef	8b 45 24	 mov	 eax, DWORD PTR month$[rbp]
  000f2	ff c0		 inc	 eax
  000f4	89 45 24	 mov	 DWORD PTR month$[rbp], eax

; 18   :     }

  000f7	eb cd		 jmp	 SHORT $LN2@dateOfYear
$LN3@dateOfYear:

; 19   : 
; 20   :     return dayOfYear - currentDay;

  000f9	8b 45 04	 mov	 eax, DWORD PTR currentDay$[rbp]
  000fc	8b 8d 70 01 00
	00		 mov	 ecx, DWORD PTR dayOfYear$[rbp]
  00102	2b c8		 sub	 ecx, eax
  00104	8b c1		 mov	 eax, ecx

; 21   : }

  00106	8b f8		 mov	 edi, eax
  00108	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0010c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?dateOfYear@@YAHHH@Z$rtcFrameData
  00113	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00118	8b c7		 mov	 eax, edi
  0011a	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00121	5f		 pop	 rdi
  00122	5d		 pop	 rbp
  00123	c3		 ret	 0
?dateOfYear@@YAHHH@Z ENDP				; dateOfYear
_TEXT	ENDS
END
