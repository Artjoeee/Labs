; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33522.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__AE52136B_Lab_01@pch DB 01H
__DB48250F_getDay@cpp DB 01H
__6DC09320_stdafx@h DB 01H
__8FED6CB7_stdafx@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?getDay@@YAHHHH@Z				; getDay
PUBLIC	__JustMyCode_Default
EXTRN	?getYear@@YA_NH@Z:PROC				; getYear
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getDay@@YAHHHH@Z DD imagerel $LN8
	DD	imagerel $LN8+304
	DD	imagerel $unwind$?getDay@@YAHHHH@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getDay@@YAHHHH@Z DD 025053301H
	DD	0116231bH
	DD	0700f002fH
	DD	0500eH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?getDay@@YAHHHH@Z$rtcName$0 DB 064H			; getDay
	DB	061H
	DB	079H
	DB	04dH
	DB	06fH
	DB	06eH
	DB	074H
	DB	068H
	DB	00H
	ORG $+7
?getDay@@YAHHHH@Z$rtcVarDesc DD 028H			; getDay
	DD	034H
	DQ	FLAT:?getDay@@YAHHHH@Z$rtcName$0
	ORG $+48
?getDay@@YAHHHH@Z$rtcFrameData DD 01H			; getDay
	DD	00H
	DQ	FLAT:?getDay@@YAHHHH@Z$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\HomeUser\Desktop\ œŒ\Lab_01\Lab_01\getDay.cpp
;	COMDAT ?getDay@@YAHHHH@Z
_TEXT	SEGMENT
dayMonth$ = 8
dayYear$ = 84
i$4 = 116
day$ = 368
month$ = 376
year$ = 384
?getDay@@YAHHHH@Z PROC					; getDay, COMDAT

; 5    : {

$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  0000d	55		 push	 rbp
  0000e	57		 push	 rdi
  0000f	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00016	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001b	48 8d 7c 24 20	 lea	 rdi, QWORD PTR [rsp+32]
  00020	b9 26 00 00 00	 mov	 ecx, 38			; 00000026H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	8b 8c 24 98 01
	00 00		 mov	 ecx, DWORD PTR [rsp+408]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DB48250F_getDay@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 6    :     int dayMonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

  0003f	c7 45 08 00 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp], 0
  00046	c7 45 0c 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+4], 31
  0004d	c7 45 10 1c 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+8], 28
  00054	c7 45 14 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+12], 31
  0005b	c7 45 18 1e 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+16], 30
  00062	c7 45 1c 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+20], 31
  00069	c7 45 20 1e 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+24], 30
  00070	c7 45 24 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+28], 31
  00077	c7 45 28 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+32], 31
  0007e	c7 45 2c 1e 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+36], 30
  00085	c7 45 30 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+40], 31
  0008c	c7 45 34 1e 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+44], 30
  00093	c7 45 38 1f 00
	00 00		 mov	 DWORD PTR dayMonth$[rbp+48], 31

; 7    :     int dayYear = day;

  0009a	8b 85 70 01 00
	00		 mov	 eax, DWORD PTR day$[rbp]
  000a0	89 45 54	 mov	 DWORD PTR dayYear$[rbp], eax

; 8    : 
; 9    :     if (getYear(year))

  000a3	8b 8d 80 01 00
	00		 mov	 ecx, DWORD PTR year$[rbp]
  000a9	e8 00 00 00 00	 call	 ?getYear@@YA_NH@Z	; getYear
  000ae	0f b6 c0	 movzx	 eax, al
  000b1	85 c0		 test	 eax, eax
  000b3	74 11		 je	 SHORT $LN5@getDay

; 10   :     {
; 11   :         dayMonth[2] = 29;

  000b5	b8 04 00 00 00	 mov	 eax, 4
  000ba	48 6b c0 02	 imul	 rax, rax, 2
  000be	c7 44 05 08 1d
	00 00 00	 mov	 DWORD PTR dayMonth$[rbp+rax], 29
$LN5@getDay:

; 12   :     }
; 13   : 
; 14   :     for (int i = 1; i < month; i++)

  000c6	c7 45 74 01 00
	00 00		 mov	 DWORD PTR i$4[rbp], 1
  000cd	eb 08		 jmp	 SHORT $LN4@getDay
$LN2@getDay:
  000cf	8b 45 74	 mov	 eax, DWORD PTR i$4[rbp]
  000d2	ff c0		 inc	 eax
  000d4	89 45 74	 mov	 DWORD PTR i$4[rbp], eax
$LN4@getDay:
  000d7	8b 85 78 01 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  000dd	39 45 74	 cmp	 DWORD PTR i$4[rbp], eax
  000e0	7d 2b		 jge	 SHORT $LN3@getDay

; 15   :     {
; 16   :         dayYear += dayMonth[i];

  000e2	48 63 45 74	 movsxd	 rax, DWORD PTR i$4[rbp]
  000e6	8b 44 85 08	 mov	 eax, DWORD PTR dayMonth$[rbp+rax*4]
  000ea	8b 4d 54	 mov	 ecx, DWORD PTR dayYear$[rbp]
  000ed	03 c8		 add	 ecx, eax
  000ef	8b c1		 mov	 eax, ecx
  000f1	89 45 54	 mov	 DWORD PTR dayYear$[rbp], eax

; 17   : 
; 18   :         if (day > dayMonth[month])

  000f4	48 63 85 78 01
	00 00		 movsxd	 rax, DWORD PTR month$[rbp]
  000fb	8b 44 85 08	 mov	 eax, DWORD PTR dayMonth$[rbp+rax*4]
  000ff	39 85 70 01 00
	00		 cmp	 DWORD PTR day$[rbp], eax
  00105	7e 04		 jle	 SHORT $LN6@getDay

; 19   :         {
; 20   :             return 0;

  00107	33 c0		 xor	 eax, eax
  00109	eb 05		 jmp	 SHORT $LN1@getDay
$LN6@getDay:

; 21   :         }
; 22   :     }

  0010b	eb c2		 jmp	 SHORT $LN2@getDay
$LN3@getDay:

; 23   : 
; 24   :     return dayYear;

  0010d	8b 45 54	 mov	 eax, DWORD PTR dayYear$[rbp]
$LN1@getDay:

; 25   : }

  00110	48 8b f8	 mov	 rdi, rax
  00113	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00117	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?getDay@@YAHHHH@Z$rtcFrameData
  0011e	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00123	48 8b c7	 mov	 rax, rdi
  00126	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  0012d	5f		 pop	 rdi
  0012e	5d		 pop	 rbp
  0012f	c3		 ret	 0
?getDay@@YAHHHH@Z ENDP					; getDay
_TEXT	ENDS
END
